<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.demo.dao.ExamMapper">
  <resultMap id="BaseResultMap" type="com.community.demo.entity.Exam">
    <id column="emid" jdbcType="INTEGER" property="emid" />
    <result column="rNo" jdbcType="VARCHAR" property="rno" />
    <result column="emdate" jdbcType="DATE" property="emdate" />
    <result column="emFraction" jdbcType="VARCHAR" property="emfraction" />
    <result column="emflag" jdbcType="INTEGER" property="emflag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emid, rNo, emdate, emFraction, emflag
  </sql>
  <select id="selectByExample" parameterType="com.community.demo.entity.ExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where emid = #{emid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam
    where emid = #{emid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.community.demo.entity.ExamExample">
    delete from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.community.demo.entity.Exam">
    insert into exam (emid, rNo, emdate, 
      emFraction, emflag)
    values (#{emid,jdbcType=INTEGER}, #{rno,jdbcType=VARCHAR},now(),
      #{emfraction,jdbcType=VARCHAR}, 1)
  </insert>
  <insert id="insertSelective" parameterType="com.community.demo.entity.Exam">
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="emid != null">
        emid,
      </if>
      <if test="rno != null">
        rNo,
      </if>
      <if test="emdate != null">
        emdate,
      </if>
      <if test="emfraction != null">
        emFraction,
      </if>
      <if test="emflag != null">
        emflag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="emid != null">
        #{emid,jdbcType=INTEGER},
      </if>
      <if test="rno != null">
        #{rno,jdbcType=VARCHAR},
      </if>
      <if test="emdate != null">
        #{emdate,jdbcType=DATE},
      </if>
      <if test="emfraction != null">
        #{emfraction,jdbcType=VARCHAR},
      </if>
      <if test="emflag != null">
        #{emflag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.community.demo.entity.ExamExample" resultType="java.lang.Long">
    select count(*) from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam
    <set>
      <if test="record.emid != null">
        emid = #{record.emid,jdbcType=INTEGER},
      </if>
      <if test="record.rno != null">
        rNo = #{record.rno,jdbcType=VARCHAR},
      </if>
      <if test="record.emdate != null">
        emdate = #{record.emdate,jdbcType=DATE},
      </if>
      <if test="record.emfraction != null">
        emFraction = #{record.emfraction,jdbcType=VARCHAR},
      </if>
      <if test="record.emflag != null">
        emflag = #{record.emflag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam
    set emid = #{record.emid,jdbcType=INTEGER},
      rNo = #{record.rno,jdbcType=VARCHAR},
      emdate = #{record.emdate,jdbcType=DATE},
      emFraction = #{record.emfraction,jdbcType=VARCHAR},
      emflag = #{record.emflag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.community.demo.entity.Exam">
    update exam
    <set>
      <if test="rno != null">
        rNo = #{rno,jdbcType=VARCHAR},
      </if>
      <if test="emdate != null">
        emdate = #{emdate,jdbcType=DATE},
      </if>
      <if test="emfraction != null">
        emFraction = #{emfraction,jdbcType=VARCHAR},
      </if>
      <if test="emflag != null">
        emflag = #{emflag,jdbcType=INTEGER},
      </if>
    </set>
    where emid = #{emid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.community.demo.entity.Exam">
    update exam
    set rNo = #{rno,jdbcType=VARCHAR},
      emdate = #{emdate,jdbcType=DATE},
      emFraction = #{emfraction,jdbcType=VARCHAR},
      emflag = #{emflag,jdbcType=INTEGER}
    where emid = #{emid,jdbcType=INTEGER}
  </update>
</mapper>